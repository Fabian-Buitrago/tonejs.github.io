$blue: #3833ED;
$green: #1EDF3E;
$red: #ED3333;
$purple: #7F33ED;
$teal : #22DBC0;
$pink : #ED33CF;
$yellow : rgb(209, 196, 15);
$darkGray : #616161;
$gray : #8C8C8C;
$lightGray : #ECECEC;
$lighterGray : rgba($lightGray, 0.5);
$orange : #f5871f;
$lightPurple : #ecfbff;

$margin: 3px;
$padding: 25px;
$indent : 30px;
$border : 3px solid black;

$degMult : -30;
$constructorColor: adjust-hue($purple, 0 * $degMult);
$memberColor: adjust-hue($purple, 1 * $degMult);
$methodColor: adjust-hue($purple, 2 * $degMult);
$staticMemberColor: adjust-hue($purple, 2 * $degMult);
$staticMethodColor: adjust-hue($purple, 3 * $degMult);

$sidebarWidth : 250px;
$mobileWidth: 700px;

@function clamp($number, $min, $max) {
	@return if($number < $min, $min, if($number > $max, $max, $number));
}

@mixin interpolate($from, $to, $steps, $attribute) {
	@for $var from 0 to $steps {
		&:nth-child(#{$var}) {
			$weight : clamp($var / $steps, 0, 1);
			#{$attribute}: mix($to, $from, $weight * 100);
		}
	}
	& {
		#{$attribute}: $to;
	}
}